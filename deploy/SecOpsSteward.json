{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "4757188681085476265"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group"
      }
    },
    "deploymentId": {
      "type": "string",
      "defaultValue": "[uniqueString(parameters('resourceGroupName'))]",
      "metadata": {
        "description": "A random string to append to all resources in deployment"
      }
    },
    "azureAdApplicationId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory Application ID"
      }
    },
    "azureAdApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "Azure Active Directory Application Secret"
      }
    },
    "includeDebugRoles": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Include Debug Roles"
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "SecOps Steward Web App Name"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "Web App Service SKU"
      },
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ]
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Web App instances"
      },
      "minValue": 1
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "Key Vault Service SKU"
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Administrator Username"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "SQL Server Administrator Password"
      },
      "maxLength": 128,
      "minLength": 12
    },
    "mainUserPrincipal": {
      "type": "string",
      "metadata": {
        "description": "Administrator User Principal"
      }
    }
  },
  "functions": [],
  "variables": {
    "signDecryptRoleName": "SoS Key Sign-Only User",
    "verifyEncryptRoleName": "SoS Key Verify-Only User",
    "resourceGroupLocation": "[deployment().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[variables('resourceGroupLocation')]"
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2018-01-01-preview",
      "name": "[guid(variables('signDecryptRoleName'))]",
      "properties": {
        "roleName": "[variables('signDecryptRoleName')]",
        "description": "User can only sign with a key",
        "permissions": [
          {
            "dataActions": [
              "Microsoft.KeyVault/vaults/keys/read",
              "Microsoft.KeyVault/vaults/keys/unwrap/action",
              "Microsoft.KeyVault/vaults/keys/decrypt/action",
              "Microsoft.KeyVault/vaults/keys/sign/action"
            ]
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2018-01-01-preview",
      "name": "[guid(variables('verifyEncryptRoleName'))]",
      "properties": {
        "roleName": "[variables('verifyEncryptRoleName')]",
        "description": "User can only verify with a key",
        "permissions": [
          {
            "dataActions": [
              "Microsoft.KeyVault/vaults/keys/read",
              "Microsoft.KeyVault/vaults/keys/wrap/action",
              "Microsoft.KeyVault/vaults/keys/encrypt/action",
              "Microsoft.KeyVault/vaults/keys/verify/action"
            ]
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "rgResources",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "randomString": {
            "value": "[parameters('deploymentId')]"
          },
          "includeDebugRoles": {
            "value": "[parameters('includeDebugRoles')]"
          },
          "aadAppSecret": {
            "value": "[parameters('azureAdApplicationSecret')]"
          },
          "mainUserPrincipal": {
            "value": "[parameters('mainUserPrincipal')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "signDecryptRole": {
            "value": "[guid(variables('signDecryptRoleName'))]"
          },
          "verifyEncryptRole": {
            "value": "[guid(variables('verifyEncryptRoleName'))]"
          },
          "subscriptionId": {
            "value": "[subscription().subscriptionId]"
          },
          "aadAppId": {
            "value": "[parameters('azureAdApplicationId')]"
          },
          "sqlAdministratorLogin": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "sqlAdministratorLoginPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          },
          "skuCapacity": {
            "value": "[parameters('skuCapacity')]"
          },
          "skuName": {
            "value": "[parameters('skuName')]"
          },
          "vaultSku": {
            "value": "[parameters('vaultSku')]"
          },
          "webAppName": {
            "value": "[parameters('webAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "690984897407796683"
            }
          },
          "parameters": {
            "aadAppId": {
              "type": "string",
              "metadata": {
                "description": "Azure Active Directory Application ID"
              }
            },
            "aadAppSecret": {
              "type": "string",
              "metadata": {
                "description": "Azure Active Directory Application Secret"
              }
            },
            "mainUserPrincipal": {
              "type": "string",
              "metadata": {
                "description": "Administrator User Principal"
              }
            },
            "webAppName": {
              "type": "string",
              "metadata": {
                "description": "SecOps Steward Web App Name"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "F1",
              "metadata": {
                "description": "Web App Service SKU"
              },
              "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
              ]
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "Number of Web App instances"
              },
              "minValue": 1
            },
            "vaultSku": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "Key Vault Service SKU"
              }
            },
            "sqlAdministratorLogin": {
              "type": "string",
              "metadata": {
                "description": "SQL Server Administrator Username"
              }
            },
            "sqlAdministratorLoginPassword": {
              "type": "secureString",
              "metadata": {
                "description": "SQL Server Administrator Password"
              },
              "maxLength": 128,
              "minLength": 12
            },
            "subscriptionId": {
              "type": "string",
              "metadata": {
                "description": "Subscription ID"
              }
            },
            "signDecryptRole": {
              "type": "string",
              "metadata": {
                "description": "Sign/Decrypt-Only Key Vault Role ID"
              }
            },
            "verifyEncryptRole": {
              "type": "string",
              "metadata": {
                "description": "Verify/Encrypt-Only Key Vault Role ID"
              }
            },
            "resourceGroupName": {
              "type": "string"
            },
            "includeDebugRoles": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Include debug roles for mainUserPrincipal user"
              }
            },
            "randomString": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().name)]",
              "metadata": {
                "description": "Random string to append to all resources in deployment"
              }
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "hostingPlanName": "[format('soshosting{0}', parameters('randomString'))]",
            "sqlserverName": "[format('sossql{0}', parameters('randomString'))]",
            "databaseName": "sosdb",
            "vaultName": "[format('sosvault{0}', parameters('randomString'))]",
            "serviceBusNamespaceName": "[format('sosbus{0}', parameters('randomString'))]",
            "storageAccountName": "[format('sosblobs{0}', parameters('randomString'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2019-06-01-preview",
              "name": "[variables('sqlserverName')]",
              "location": "[variables('location')]",
              "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2020-08-01-preview",
              "name": "[format('{0}/{1}', variables('sqlserverName'), variables('databaseName'))]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 1073741824
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2014-04-01",
              "name": "[format('{0}/AllowAllWindowsAzureIps', variables('sqlserverName'))]",
              "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              },
              "kind": "windows"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[parameters('webAppName')]",
              "location": "[variables('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "app",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "httpsOnly": true,
                "enabled": true,
                "reserved": false,
                "hyperV": false,
                "isXenon": false,
                "siteConfig": {
                  "netFrameworkVersion": "v5.0",
                  "scmType": "None",
                  "managedPipelineMode": "Integrated",
                  "virtualApplications": [
                    {
                      "virtualPath": "/",
                      "physicalPath": "site\\wwwroot",
                      "preloadEnabled": false
                    }
                  ],
                  "minTlsVersion": "1.2",
                  "appSettings": [
                    {
                      "name": "AzureAD__ClientId",
                      "value": "[parameters('aadAppId')]"
                    },
                    {
                      "name": "AzureAD__ClientSecret",
                      "value": "[parameters('aadAppSecret')]"
                    },
                    {
                      "name": "AzureAD__TenantId",
                      "value": "[subscription().tenantId]"
                    },
                    {
                      "name": "AzureAD__Instance",
                      "value": "[environment().authentication.loginEndpoint]"
                    },
                    {
                      "name": "AzureAD__CallbackPath",
                      "value": "/signin-oidc"
                    },
                    {
                      "name": "Chimera__SignDecryptRole",
                      "value": "[parameters('signDecryptRole')]"
                    },
                    {
                      "name": "Chimera__VerifyEncryptRole",
                      "value": "[parameters('verifyEncryptRole')]"
                    },
                    {
                      "name": "Chimera__SubscriptionId",
                      "value": "[parameters('subscriptionId')]"
                    },
                    {
                      "name": "Chimera__VaultName",
                      "value": "[variables('vaultName')]"
                    },
                    {
                      "name": "Chimera__ServiceBusNamespace",
                      "value": "[variables('serviceBusNamespaceName')]"
                    },
                    {
                      "name": "Chimera__PackageRepoAccount",
                      "value": "[variables('storageAccountName')]"
                    },
                    {
                      "name": "Chimera__PackageRepoContainer",
                      "value": "packages"
                    },
                    {
                      "name": "Chimera__ResourceGroup",
                      "value": "[parameters('resourceGroupName')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('AppInsights{0}', parameters('webAppName')))).InstrumentationKey]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[reference(resourceId('Microsoft.Insights/components', format('AppInsights{0}', parameters('webAppName')))).ConnectionString]"
                    },
                    {
                      "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                      "value": "~2"
                    },
                    {
                      "name": "ASPNETCORE_ENVIRONMENT",
                      "value": "Development"
                    }
                  ],
                  "connectionStrings": [
                    {
                      "name": "Database",
                      "connectionString": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2}@{3};Password={4};', reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, variables('databaseName'), parameters('sqlAdministratorLogin'), reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, parameters('sqlAdministratorLoginPassword'))]",
                      "type": "SQLAzure"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]",
                      "type": "Custom"
                    },
                    {
                      "name": "AzureWebJobsDashboard",
                      "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]",
                      "type": "Custom"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', format('AppInsights{0}', parameters('webAppName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2018-05-01-preview",
              "name": "[format('AppInsights{0}', parameters('webAppName'))]",
              "location": "[variables('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[variables('vaultName')]",
              "location": "[variables('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('vaultSku')]"
                },
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('vaultName'))]",
              "name": "[guid(variables('vaultName'), '00482a5a')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalId": "[parameters('mainUserPrincipal')]",
                "principalType": "User"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('vaultName'))]",
              "name": "[guid(variables('vaultName'), 'f25e0fa2')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f25e0fa2-a7c8-4377-a976-54943a77a395')]",
                "principalId": "[parameters('mainUserPrincipal')]",
                "principalType": "User"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('vaultName'))]",
              "name": "[guid(variables('vaultName'), '18d7d88d')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
                "principalId": "[parameters('mainUserPrincipal')]",
                "principalType": "User"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
              ]
            },
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2017-04-01",
              "name": "[variables('serviceBusNamespaceName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', variables('serviceBusNamespaceName'))]",
              "name": "[guid(variables('serviceBusNamespaceName'), '090c5cfd')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419')]",
                "principalId": "[parameters('mainUserPrincipal')]",
                "principalType": "User"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot"
              }
            },
            {
              "condition": "[parameters('includeDebugRoles')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
              "name": "[guid(variables('storageAccountName'), parameters('webAppName'), 'debug')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalId": "[parameters('mainUserPrincipal')]",
                "principalType": "User"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
              "name": "[guid(variables('storageAccountName'), parameters('webAppName'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2020-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/default/packages', variables('storageAccountName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}